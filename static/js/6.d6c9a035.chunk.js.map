{"version":3,"sources":["Components/ProjectIntro.jsx","Components/ProjectControl.jsx","Pages/Project.jsx"],"names":["ProjectIntro","data","className","title","stack","href","demo","target","rel","github","ProjectControl","history","useHistory","onClick","goBack","window","scrollTo","React","memo","Project","id","useParams","useState","show","setShow","works","filter","work","useEffect","setTimeout","motion","section","initial","opacity","animate","exit","transition","duration","Header","text","para","src","screenshot","pc","alt","map","stackIcon","icon","mobile","length","img","e","index"],"mappings":"+OA4CeA,EA1CM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACrB,OACE,sBAAKC,UAAU,eAAf,UACE,oBAAIA,UAAU,sBAAd,SACGD,EAAKE,QAER,sBAAKD,UAAU,qBAAf,UACE,8BACE,yCACA,+BAAOD,EAAKG,WAEd,8BACE,wCACA,+BACE,mBACEF,UAAU,eACVG,KAAMJ,EAAKK,KACXC,OAAO,SACPC,IAAI,aAJN,0BAUJ,8BACE,wCACA,+BACE,mBACEN,UAAU,eACVG,KAAMJ,EAAKQ,OACXF,OAAO,SACPC,IAAI,aAJN,gCCzBNE,G,MAAiB,WACrB,IAAMC,EAAUC,cAKhB,OACE,uBAAMV,UAAU,iBAAhB,UACE,wBAAQW,QALO,kBAAMF,EAAQG,UAK7B,SACE,sBAAMZ,UAAU,eAAhB,mCAIF,wBAAQW,QATM,kBAAME,OAAOC,SAAS,EAAE,IAStC,SACE,sBAAMd,UAAU,eAAhB,wBAQOe,MAAMC,KAAKR,G,cCyEXS,UA1FC,WACd,IAAQC,EAAOC,cAAPD,GACR,EAAwBE,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMvB,EAAOwB,IAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKP,KAAOA,KAAI,GAOpD,OAJAQ,qBAAU,WACRC,YAAW,kBAAML,GAAQ,KAAO,OAC/B,IAEID,GACL,eAACO,EAAA,EAAOC,QAAR,CACE7B,UAAU,UACV8B,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEC,SAAU,IAL1B,UAOE,cAACC,EAAA,EAAD,IAGA,cAAC,EAAD,CAAcrC,KAAMA,IAGpB,qBAAKC,UAAU,sBAAf,SACE,4BAAID,EAAKsC,KAAK,GAAGC,SAInB,qBACEtC,UAAU,wBACVuC,IAAKxC,EAAKyC,WAAWC,GAAG,GACxBC,IAAI,eAIN,sBAAK1C,UAAU,wBAAf,UACE,6BAAKD,EAAKsC,KAAK,GAAGpC,QACjBF,EAAKsC,KAAK,GAAGC,KAAKK,KAAI,SAACN,EAAMnB,GAAP,OAAc,4BAAamB,GAALnB,SAI/C,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,8BACGD,EAAK6C,UAAUD,KAAI,SAACE,EAAM3B,GAAP,OAClB,qBAEElB,UAAU,MACVuC,IAAKM,EACLH,IAAI,cAHCxB,UAOb,sBAAKlB,UAAU,4BAAf,UACE,6BAAKD,EAAKsC,KAAK,GAAGpC,QACjBF,EAAKsC,KAAK,GAAGC,KAAKK,KAAI,SAACN,EAAMnB,GAAP,OAAc,4BAAamB,GAALnB,YAKd,IAAlCnB,EAAKyC,WAAWM,OAAOC,QACtB,qBAAK/C,UAAU,yBAAf,SACGD,EAAKyC,WAAWM,OAAOH,KAAI,SAACK,EAAK9B,GAAN,OAC1B,qBAEElB,UAAU,MACVuC,IAAKS,EACLN,IAAI,qBAHCxB,QASb,qBAAKlB,UAAU,gBAAf,SACGD,EAAKyC,WAAWC,GAAGjB,QAAO,SAACyB,EAAGC,GAAJ,OAAwB,IAAVA,KAAaP,KAAI,SAACK,EAAK9B,GAAN,OACxD,qBAEAlB,UAAU,MACVuC,IAAKS,EACLN,IAAI,sBAHCxB,QAOT,cAAC,EAAD","file":"static/js/6.d6c9a035.chunk.js","sourcesContent":["import '../style/projectIntro.scss';\n\nconst ProjectIntro = ({data}) => {\n  return (\n    <div className=\"projectIntro\">\n      <h1 className=\"projectIntro__title\">\n        {data.title}\n      </h1>\n      <div className=\"projectIntro__info\">\n        <p>\n          <span>Stack</span>\n          <span>{data.stack}</span>\n        </p>\n        <p>\n          <span>Live</span>\n          <span>\n            <a\n              className=\"hover-button\"\n              href={data.demo}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Website\n            </a>\n          </span>\n        </p>\n        <p>\n          <span>Code</span>\n          <span>\n            <a\n              className=\"hover-button\"\n              href={data.github}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Github\n            </a>\n          </span>\n        </p>\n      </div>\n  </div>\n  )\n}\n\nexport default ProjectIntro;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../style/projectControl.scss';\n\nconst ProjectControl = () => {\n  const history = useHistory();\n\n  const handleBack = () => history.goBack();\n  const handleTop = () => window.scrollTo(0,0);\n\n  return (\n    <menu className=\"projectControl\">\n      <button onClick={handleBack}>\n        <span className=\"hover-button\">\n          &larr; Back to home\n        </span>\n      </button>\n      <button onClick={handleTop}>\n        <span className=\"hover-button\">\n          Top\n        </span>\n      </button>\n    </menu>\n  )\n}\n\nexport default React.memo(ProjectControl);","import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { motion } from 'framer-motion';\nimport Header from 'Components/Header';\nimport ProjectIntro from '../Components/ProjectIntro';\nimport ProjectControl from '../Components/ProjectControl';\nimport works from '../projectData.js';\nimport '../style/project.scss';\n\nconst Project = () => {  \n  const { id } = useParams();\n  const [show, setShow] = useState(false);\n\n  const data = works.filter((work) => work.id === id)[0];\n\n  // to scroll up to the top\n  useEffect(() => {\n    setTimeout(() => setShow(true), 100);\n  }, []);\n\n  return show && (\n    <motion.section \n      className=\"project\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <Header />\n\n      {/* project title and summary */}\n      <ProjectIntro data={data} />\n\n      {/* project introduction */}\n      <div className=\"project__about text\">\n        <p>{data.text[0].para}</p>\n      </div>\n\n      {/* main screenshot */}\n      <img\n        className=\"project__introImg img\"\n        src={data.screenshot.pc[0]}\n        alt=\"screenshot\" \n      />\n\n      {/* project purpose */}\n      <div className=\"project__purpose text\">\n        <h2>{data.text[1].title}</h2>\n        {data.text[1].para.map((text, id) => <p key={id}>{text}</p>)}\n      </div>\n\n      {/* project stack */}\n      <div className=\"project__stack\">\n        <div className=\"project__stack__icon\">\n          <div>\n            {data.stackIcon.map((icon, id) => (\n              <img \n                key={id} \n                className=\"img\" \n                src={icon} \n                alt=\"stack icon\" />\n            ))}\n          </div>\n        </div>\n        <div className=\"project__stack__text text\">\n          <h2>{data.text[2].title}</h2>\n          {data.text[2].para.map((text, id) => <p key={id}>{text}</p>)}\n        </div>\n      </div>\n\n      {/* mobile screenshot */}\n      {data.screenshot.mobile.length !== 0 &&\n        <div className=\"project__imgs --mobile\">\n          {data.screenshot.mobile.map((img, id) => (\n            <img \n              key={id} \n              className=\"img\" \n              src={img} \n              alt=\"mobile screenshot\" />\n          ))}\n        </div>\n      }\n\n      {/* desktop screenshot */}\n      <div className=\"project__imgs\">\n        {data.screenshot.pc.filter((e, index) => index !== 0).map((img, id) => (\n          <img\n          key={id} \n          className=\"img\" \n          src={img} \n          alt=\"desktop screenshot\" />\n        ))}\n      </div>\n\n      <ProjectControl />\n    </motion.section>\n  )\n}\n\nexport default Project;"],"sourceRoot":""}