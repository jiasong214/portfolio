{"version":3,"file":"static/js/551.f11e3981.chunk.js","mappings":"sNA4CA,EA1CqB,SAAC,GAAY,IAAXA,EAAU,EAAVA,KACrB,OACE,iBAAKC,UAAU,eAAf,WACE,eAAIA,UAAU,sBAAd,SACGD,EAAKE,SAER,iBAAKD,UAAU,qBAAf,WACE,0BACE,qCACA,0BAAOD,EAAKG,YAEd,0BACE,oCACA,2BACE,cACEF,UAAU,eACVG,KAAMJ,EAAKK,KACXC,OAAO,SACPC,IAAI,aAJN,2BAUJ,0BACE,oCACA,2BACE,cACEN,UAAU,eACVG,KAAMJ,EAAKQ,OACXF,OAAO,SACPC,IAAI,aAJN,gCCzBNE,EAAiB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,kBAAMV,UAAU,iBAAhB,WACE,mBAAQW,QALO,kBAAMF,GAAU,IAK/B,UACE,iBAAMT,UAAU,eAAhB,oCAIF,mBAAQW,QATM,kBAAMC,OAAOC,SAAS,EAAE,IAStC,UACE,iBAAMb,UAAU,eAAhB,uBAQR,EAAec,EAAAA,KAAWN,G,UC0E1B,EA3FgB,WACd,IAAQO,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMpB,EAAOqB,EAAAA,EAAAA,QAAa,SAACC,GAAD,OAAUA,EAAKN,KAAOA,KAAI,GAOpD,OAJAO,EAAAA,EAAAA,YAAU,WACRC,YAAW,kBAAMJ,GAAQ,KAAO,OAC/B,IAGDD,IACE,UAACM,EAAA,UAAD,CACExB,UAAU,UACVyB,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEC,SAAU,IAL1B,WAOE,SAACC,EAAA,EAAD,KAGA,SAAC,EAAD,CAAchC,KAAMA,KAGpB,gBAAKC,UAAU,sBAAf,UACE,uBAAID,EAAKiC,KAAK,GAAGC,UAInB,gBACEjC,UAAU,wBACVkC,IAAKnC,EAAKoC,WAAWC,GAAG,GACxBC,IAAI,gBAIN,iBAAKrC,UAAU,wBAAf,WACE,wBAAKD,EAAKiC,KAAK,GAAG/B,QACjBF,EAAKiC,KAAK,GAAGC,KAAKK,KAAI,SAACN,EAAMjB,GAAP,OACrB,uBAAaiB,GAALjB,UAKZ,iBAAKf,UAAU,iBAAf,WACE,gBAAKA,UAAU,uBAAf,UACE,yBACGD,EAAKwC,UAAUD,KAAI,SAACE,EAAMzB,GAAP,OAClB,gBAAcf,UAAU,MAAMkC,IAAKM,EAAMH,IAAI,cAAnCtB,WAIhB,iBAAKf,UAAU,4BAAf,WACE,wBAAKD,EAAKiC,KAAK,GAAG/B,QACjBF,EAAKiC,KAAK,GAAGC,KAAKK,KAAI,SAACN,EAAMjB,GAAP,OACrB,uBAAaiB,GAALjB,YAMqB,IAAlChB,EAAKoC,WAAWM,OAAOC,SACtB,gBAAK1C,UAAU,yBAAf,SACGD,EAAKoC,WAAWM,OAAOH,KAAI,SAACK,EAAK5B,GAAN,OAC1B,gBAAcf,UAAU,MAAMkC,IAAKS,EAAKN,IAAI,qBAAlCtB,SAMhB,gBAAKf,UAAU,gBAAf,SACGD,EAAKoC,WAAWC,GACdQ,QAAO,SAACC,EAAGC,GAAJ,OAAwB,IAAVA,KACrBR,KAAI,SAACK,EAAK5B,GAAN,OACH,gBAEEf,UAAU,MACVkC,IAAKS,EACLN,IAAI,sBAHCtB,SAQb,SAAC,EAAD","sources":["Components/ProjectIntro.jsx","Components/ProjectControl.jsx","Pages/Project.jsx"],"sourcesContent":["import '../style/projectIntro.scss';\n\nconst ProjectIntro = ({data}) => {\n  return (\n    <div className=\"projectIntro\">\n      <h1 className=\"projectIntro__title\">\n        {data.title}\n      </h1>\n      <div className=\"projectIntro__info\">\n        <p>\n          <span>Stack</span>\n          <span>{data.stack}</span>\n        </p>\n        <p>\n          <span>Live</span>\n          <span>\n            <a\n              className=\"hover-button\"\n              href={data.demo}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Website\n            </a>\n          </span>\n        </p>\n        <p>\n          <span>Code</span>\n          <span>\n            <a\n              className=\"hover-button\"\n              href={data.github}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Github\n            </a>\n          </span>\n        </p>\n      </div>\n  </div>\n  )\n}\n\nexport default ProjectIntro;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../style/projectControl.scss';\n\nconst ProjectControl = () => {\n  const navigate = useNavigate();\n\n  const handleBack = () => navigate(-1);\n  const handleTop = () => window.scrollTo(0,0);\n\n  return (\n    <menu className=\"projectControl\">\n      <button onClick={handleBack}>\n        <span className=\"hover-button\">\n          &larr; Back to home\n        </span>\n      </button>\n      <button onClick={handleTop}>\n        <span className=\"hover-button\">\n          Top\n        </span>\n      </button>\n    </menu>\n  )\n}\n\nexport default React.memo(ProjectControl);","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport Header from \"Components/Header\";\nimport ProjectIntro from \"Components/ProjectIntro\";\nimport ProjectControl from \"Components/ProjectControl\";\nimport works from \"../projectData.js\";\nimport \"../style/project.scss\";\n\nconst Project = () => {\n  const { id } = useParams();\n  const [show, setShow] = useState(false);\n\n  const data = works.filter((work) => work.id === id)[0];\n\n  // to scroll up to the top\n  useEffect(() => {\n    setTimeout(() => setShow(true), 100);\n  }, []);\n\n  return (\n    show && (\n      <motion.section\n        className=\"project\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <Header />\n\n        {/* project title and summary */}\n        <ProjectIntro data={data} />\n\n        {/* project introduction */}\n        <div className=\"project__about text\">\n          <p>{data.text[0].para}</p>\n        </div>\n\n        {/* main screenshot */}\n        <img\n          className=\"project__introImg img\"\n          src={data.screenshot.pc[0]}\n          alt=\"screenshot\"\n        />\n\n        {/* project purpose */}\n        <div className=\"project__purpose text\">\n          <h2>{data.text[1].title}</h2>\n          {data.text[1].para.map((text, id) => (\n            <p key={id}>{text}</p>\n          ))}\n        </div>\n\n        {/* project stack */}\n        <div className=\"project__stack\">\n          <div className=\"project__stack__icon\">\n            <div>\n              {data.stackIcon.map((icon, id) => (\n                <img key={id} className=\"img\" src={icon} alt=\"stack icon\" />\n              ))}\n            </div>\n          </div>\n          <div className=\"project__stack__text text\">\n            <h2>{data.text[2].title}</h2>\n            {data.text[2].para.map((text, id) => (\n              <p key={id}>{text}</p>\n            ))}\n          </div>\n        </div>\n\n        {/* mobile screenshot */}\n        {data.screenshot.mobile.length !== 0 && (\n          <div className=\"project__imgs --mobile\">\n            {data.screenshot.mobile.map((img, id) => (\n              <img key={id} className=\"img\" src={img} alt=\"mobile screenshot\" />\n            ))}\n          </div>\n        )}\n\n        {/* desktop screenshot */}\n        <div className=\"project__imgs\">\n          {data.screenshot.pc\n            .filter((e, index) => index !== 0)\n            .map((img, id) => (\n              <img\n                key={id}\n                className=\"img\"\n                src={img}\n                alt=\"desktop screenshot\"\n              />\n            ))}\n        </div>\n\n        <ProjectControl />\n      </motion.section>\n    )\n  );\n};\n\nexport default Project;\n"],"names":["data","className","title","stack","href","demo","target","rel","github","ProjectControl","navigate","useNavigate","onClick","window","scrollTo","React","id","useParams","useState","show","setShow","works","work","useEffect","setTimeout","motion","initial","opacity","animate","exit","transition","duration","Header","text","para","src","screenshot","pc","alt","map","stackIcon","icon","mobile","length","img","filter","e","index"],"sourceRoot":""}